/* tslint:disable */
/* eslint-disable */
/**
 * This file was automatically generated by Payload.
 * DO NOT MODIFY IT BY HAND. Instead, modify your source Payload config,
 * and re-run `payload generate:types` to regenerate this file.
 */

/**
 * Supported timezones in IANA format.
 *
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "supportedTimezones".
 */
export type SupportedTimezones =
  | 'Pacific/Midway'
  | 'Pacific/Niue'
  | 'Pacific/Honolulu'
  | 'Pacific/Rarotonga'
  | 'America/Anchorage'
  | 'Pacific/Gambier'
  | 'America/Los_Angeles'
  | 'America/Tijuana'
  | 'America/Denver'
  | 'America/Phoenix'
  | 'America/Chicago'
  | 'America/Guatemala'
  | 'America/New_York'
  | 'America/Bogota'
  | 'America/Caracas'
  | 'America/Santiago'
  | 'America/Buenos_Aires'
  | 'America/Sao_Paulo'
  | 'Atlantic/South_Georgia'
  | 'Atlantic/Azores'
  | 'Atlantic/Cape_Verde'
  | 'Europe/London'
  | 'Europe/Berlin'
  | 'Africa/Lagos'
  | 'Europe/Athens'
  | 'Africa/Cairo'
  | 'Europe/Moscow'
  | 'Asia/Riyadh'
  | 'Asia/Dubai'
  | 'Asia/Baku'
  | 'Asia/Karachi'
  | 'Asia/Tashkent'
  | 'Asia/Calcutta'
  | 'Asia/Dhaka'
  | 'Asia/Almaty'
  | 'Asia/Jakarta'
  | 'Asia/Bangkok'
  | 'Asia/Shanghai'
  | 'Asia/Singapore'
  | 'Asia/Tokyo'
  | 'Asia/Seoul'
  | 'Australia/Brisbane'
  | 'Australia/Sydney'
  | 'Pacific/Guam'
  | 'Pacific/Noumea'
  | 'Pacific/Auckland'
  | 'Pacific/Fiji';

export interface Config {
  auth: {
    users: UserAuthOperations;
  };
  blocks: {};
  collections: {
    users: User;
    media: Media;
    categories: Category;
    brands: Brand;
    products: Product;
    orders: Order;
    customers: Customer;
    'payload-locked-documents': PayloadLockedDocument;
    'payload-preferences': PayloadPreference;
    'payload-migrations': PayloadMigration;
  };
  collectionsJoins: {};
  collectionsSelect: {
    users: UsersSelect<false> | UsersSelect<true>;
    media: MediaSelect<false> | MediaSelect<true>;
    categories: CategoriesSelect<false> | CategoriesSelect<true>;
    brands: BrandsSelect<false> | BrandsSelect<true>;
    products: ProductsSelect<false> | ProductsSelect<true>;
    orders: OrdersSelect<false> | OrdersSelect<true>;
    customers: CustomersSelect<false> | CustomersSelect<true>;
    'payload-locked-documents': PayloadLockedDocumentsSelect<false> | PayloadLockedDocumentsSelect<true>;
    'payload-preferences': PayloadPreferencesSelect<false> | PayloadPreferencesSelect<true>;
    'payload-migrations': PayloadMigrationsSelect<false> | PayloadMigrationsSelect<true>;
  };
  db: {
    defaultIDType: number;
  };
  globals: {};
  globalsSelect: {};
  locale: 'en';
  user: User & {
    collection: 'users';
  };
  jobs: {
    tasks: unknown;
    workflows: unknown;
  };
}
export interface UserAuthOperations {
  forgotPassword: {
    email: string;
    password: string;
  };
  login: {
    email: string;
    password: string;
  };
  registerFirstUser: {
    email: string;
    password: string;
  };
  unlock: {
    email: string;
    password: string;
  };
}
/**
 * Manage user accounts and permissions
 *
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "users".
 */
export interface User {
  id: number;
  firstName: string;
  lastName: string;
  phone?: string | null;
  /**
   * Upload a profile picture
   */
  profileImage?: (number | null) | Media;
  /**
   * User role determines access permissions
   */
  role?: ('super-admin' | 'admin' | 'product-manager' | 'content-editor') | null;
  /**
   * Deactivate user to prevent login without deleting account
   */
  isActive?: boolean | null;
  /**
   * Last successful login timestamp
   */
  lastLogin?: string | null;
  /**
   * User department for organizational purposes
   */
  department?: ('management' | 'products' | 'content' | 'customer-service' | 'marketing') | null;
  /**
   * Internal notes about this user (only visible to super admins)
   */
  notes?: string | null;
  updatedAt: string;
  createdAt: string;
  email: string;
  resetPasswordToken?: string | null;
  resetPasswordExpiration?: string | null;
  salt?: string | null;
  hash?: string | null;
  /**
   * Number of failed login attempts
   */
  loginAttempts?: number | null;
  lockUntil?: string | null;
  sessions?:
    | {
        id: string;
        createdAt?: string | null;
        expiresAt: string;
      }[]
    | null;
  password?: string | null;
}
/**
 * Manage all uploaded media files with organized categorization
 *
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "media".
 */
export interface Media {
  id: number;
  /**
   * Alt text for accessibility - describe what the image shows
   */
  alt: string;
  /**
   * Categorize media for better organization
   */
  category: 'products' | 'news' | 'company' | 'brands' | 'profiles' | 'general' | 'marketing';
  /**
   * Optional caption for the media
   */
  caption?: string | null;
  /**
   * Tags separated by commas for easier searching
   */
  tags?: string | null;
  /**
   * Make this media accessible on the public website
   */
  isPublic?: boolean | null;
  /**
   * Mark as featured content for homepage/banners
   */
  isFeature?: boolean | null;
  /**
   * SEO title for this media (for images used as page headers)
   */
  seoTitle?: string | null;
  /**
   * SEO description for this media
   */
  seoDescription?: string | null;
  /**
   * Internal notes about usage rights, source, or restrictions
   */
  usageNotes?: string | null;
  /**
   * Source of the media (photographer, designer, stock photo, etc.)
   */
  source?: string | null;
  /**
   * Copyright information
   */
  copyright?: string | null;
  /**
   * User who uploaded this media
   */
  uploadedBy?: (number | null) | User;
  /**
   * User who last modified this media
   */
  lastModifiedBy?: (number | null) | User;
  updatedAt: string;
  createdAt: string;
  url?: string | null;
  thumbnailURL?: string | null;
  filename?: string | null;
  mimeType?: string | null;
  filesize?: number | null;
  width?: number | null;
  height?: number | null;
  focalX?: number | null;
  focalY?: number | null;
  sizes?: {
    thumbnail?: {
      url?: string | null;
      width?: number | null;
      height?: number | null;
      mimeType?: string | null;
      filesize?: number | null;
      filename?: string | null;
    };
    card?: {
      url?: string | null;
      width?: number | null;
      height?: number | null;
      mimeType?: string | null;
      filesize?: number | null;
      filename?: string | null;
    };
    tablet?: {
      url?: string | null;
      width?: number | null;
      height?: number | null;
      mimeType?: string | null;
      filesize?: number | null;
      filename?: string | null;
    };
    desktop?: {
      url?: string | null;
      width?: number | null;
      height?: number | null;
      mimeType?: string | null;
      filesize?: number | null;
      filename?: string | null;
    };
  };
}
/**
 * Manage product categories for organization and navigation
 *
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "categories".
 */
export interface Category {
  id: number;
  /**
   * Category name - must be unique
   */
  name: string;
  /**
   * URL-friendly version of the category name
   */
  slug: string;
  /**
   * Brief description of the category
   */
  description?: string | null;
  /**
   * Category banner or representative image
   */
  image?: (number | null) | Media;
  /**
   * Icon class or Unicode for category display (optional)
   */
  icon?: string | null;
  /**
   * Category visibility status
   */
  status: 'active' | 'inactive' | 'draft';
  /**
   * Order for displaying categories (lower numbers appear first)
   */
  displayOrder: number;
  /**
   * Parent category ID for hierarchical organization (optional)
   */
  parentCategory?: string | null;
  /**
   * Feature this category on homepage or in navigation
   */
  isFeature?: boolean | null;
  /**
   * Display this category in main navigation menu
   */
  showInNavigation?: boolean | null;
  seo?: {
    /**
     * SEO title for category page
     */
    title?: string | null;
    /**
     * SEO meta description for category page
     */
    description?: string | null;
    /**
     * SEO keywords separated by commas
     */
    keywords?: string | null;
  };
  config?: {
    /**
     * Allow products to be assigned to this category
     */
    allowProducts?: boolean | null;
    /**
     * Products in this category require size selection
     */
    requiresSize?: boolean | null;
    /**
     * Products in this category require color selection
     */
    requiresColor?: boolean | null;
    /**
     * JSON configuration for category-specific product fields
     */
    customFields?: string | null;
  };
  /**
   * Number of active products in this category
   */
  productCount?: number | null;
  /**
   * User who created this category
   */
  createdBy?: (number | null) | User;
  /**
   * User who last modified this category
   */
  lastModifiedBy?: (number | null) | User;
  updatedAt: string;
  createdAt: string;
}
/**
 * Manage brand information for products
 *
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "brands".
 */
export interface Brand {
  id: number;
  /**
   * Brand name - must be unique
   */
  name: string;
  /**
   * URL-friendly version of the brand name
   */
  slug: string;
  /**
   * Brand description and background information
   */
  description?: string | null;
  /**
   * Brand logo - preferably square format with transparent background
   */
  logo: number | Media;
  /**
   * Official brand website URL
   */
  website?: string | null;
  /**
   * Country where the brand originates
   */
  countryOfOrigin?: string | null;
  /**
   * Year the brand was founded
   */
  foundedYear?: number | null;
  /**
   * Brand availability status
   */
  status: 'active' | 'inactive' | 'discontinued';
  /**
   * Feature this brand on homepage or in navigation
   */
  isFeatured?: boolean | null;
  /**
   * Mark as premium/luxury brand
   */
  isPremium?: boolean | null;
  contact?: {
    /**
     * Brand contact email
     */
    email?: string | null;
    /**
     * Brand contact phone number
     */
    phone?: string | null;
    /**
     * Brand headquarters address
     */
    address?: string | null;
  };
  social?: {
    /**
     * Facebook page URL
     */
    facebook?: string | null;
    /**
     * Instagram profile URL
     */
    instagram?: string | null;
    /**
     * Twitter profile URL
     */
    twitter?: string | null;
    /**
     * YouTube channel URL
     */
    youtube?: string | null;
  };
  seo?: {
    /**
     * SEO title for brand page
     */
    title?: string | null;
    /**
     * SEO meta description for brand page
     */
    description?: string | null;
    /**
     * SEO keywords separated by commas
     */
    keywords?: string | null;
  };
  /**
   * What the brand specializes in
   */
  specialties?: string | null;
  /**
   * General price range for this brand
   */
  priceRange?: ('budget' | 'mid-range' | 'premium' | 'luxury') | null;
  /**
   * Primary target audience
   */
  targetAudience?: string | null;
  /**
   * Number of active products from this brand
   */
  productCount?: number | null;
  /**
   * User who created this brand
   */
  createdBy?: (number | null) | User;
  /**
   * User who last modified this brand
   */
  lastModifiedBy?: (number | null) | User;
  updatedAt: string;
  createdAt: string;
}
/**
 * Manage product catalog with comprehensive details
 *
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "products".
 */
export interface Product {
  id: number;
  /**
   * Product name as displayed to customers
   */
  name: string;
  /**
   * URL-friendly version of the product name
   */
  slug: string;
  /**
   * Product category for organization
   */
  category: number | Category;
  /**
   * Product brand
   */
  brand: number | Brand;
  /**
   * Product price in LKR
   */
  price: number;
  /**
   * Stock Keeping Unit - unique product identifier
   */
  sku: string;
  /**
   * Available stock quantity
   */
  stock: number;
  /**
   * Product images (first image will be the main image)
   */
  images: {
    image: number | Media;
    /**
     * Alternative text for this specific image
     */
    altText?: string | null;
    id?: string | null;
  }[];
  /**
   * Product availability status
   */
  status: 'active' | 'inactive' | 'draft' | 'out-of-stock' | 'discontinued';
  /**
   * Available sizes (comma separated)
   */
  sizes?: string | null;
  /**
   * Available colors (comma separated)
   */
  colors?: string | null;
  /**
   * Detailed product description with rich formatting
   */
  description?: {
    root: {
      type: string;
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  } | null;
  seo?: {
    /**
     * SEO title for product page
     */
    title?: string | null;
    /**
     * SEO meta description for product page
     */
    description?: string | null;
  };
  specifications?: {
    /**
     * Primary material used
     */
    material?: string | null;
    /**
     * Product weight
     */
    weight?: string | null;
    /**
     * Product dimensions
     */
    dimensions?: string | null;
    /**
     * Care and maintenance instructions
     */
    careInstructions?: string | null;
  };
  shipping?: {
    /**
     * Offer free shipping for this product
     */
    freeShipping?: boolean | null;
    /**
     * Available for island-wide delivery
     */
    islandWideDelivery?: boolean | null;
    /**
     * Eligible for easy return policy
     */
    easyReturn?: boolean | null;
    /**
     * Shipping weight in kg
     */
    shippingWeight?: number | null;
  };
  pricing?: {
    /**
     * Original price (for displaying discounts)
     */
    originalPrice?: number | null;
    /**
     * Cost price for profit calculations (admin only)
     */
    costPrice?: number | null;
    /**
     * Alert when stock falls below this number
     */
    lowStockThreshold?: number | null;
    /**
     * Track inventory for this product
     */
    trackInventory?: boolean | null;
  };
  /**
   * Key product features and selling points
   */
  features?:
    | {
        feature: string;
        id?: string | null;
      }[]
    | null;
  /**
   * Product tags for search and filtering (comma separated)
   */
  tags?: string | null;
  /**
   * Related product IDs (comma separated)
   */
  relatedProducts?: string | null;
  analytics?: {
    /**
     * Number of product page views
     */
    viewCount?: number | null;
    /**
     * Number of times ordered
     */
    orderCount?: number | null;
    /**
     * Average customer rating (1-5)
     */
    rating?: number | null;
    /**
     * Number of customer reviews
     */
    reviewCount?: number | null;
  };
  /**
   * User who created this product
   */
  createdBy?: (number | null) | User;
  /**
   * User who last modified this product
   */
  lastModifiedBy?: (number | null) | User;
  updatedAt: string;
  createdAt: string;
}
/**
 * Manage customer orders and WhatsApp integration tracking
 *
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "orders".
 */
export interface Order {
  id: number;
  /**
   * Unique order identifier
   */
  orderNumber: string;
  /**
   * Customer full name
   */
  customerName: string;
  /**
   * Customer email address
   */
  customerEmail: string;
  /**
   * Customer primary phone number for WhatsApp communication
   */
  customerPhone: string;
  /**
   * Customer secondary phone number (optional)
   */
  customerSecondaryPhone?: string | null;
  /**
   * Complete delivery address
   */
  deliveryAddress: string;
  /**
   * Special delivery instructions or customer notes
   */
  specialInstructions?: string | null;
  /**
   * Products in this order
   */
  orderItems: {
    /**
     * Product ID reference
     */
    productId: string;
    /**
     * Product name (for record keeping)
     */
    productName: string;
    /**
     * Product SKU (for record keeping)
     */
    productSku: string;
    /**
     * Price per unit in LKR
     */
    unitPrice: number;
    /**
     * Quantity ordered
     */
    quantity: number;
    /**
     * Selected size (if applicable)
     */
    selectedSize?: string | null;
    /**
     * Selected color (if applicable)
     */
    selectedColor?: string | null;
    /**
     * Subtotal for this item (unit price × quantity)
     */
    subtotal: number;
    id?: string | null;
  }[];
  /**
   * Order subtotal (before shipping and taxes)
   */
  orderSubtotal: number;
  /**
   * Shipping cost in LKR
   */
  shippingCost?: number | null;
  /**
   * Discount amount in LKR
   */
  discount?: number | null;
  /**
   * Final order total
   */
  orderTotal: number;
  /**
   * Current order status
   */
  orderStatus: 'pending' | 'confirmed' | 'processing' | 'shipped' | 'delivered' | 'cancelled' | 'refunded';
  /**
   * Payment status
   */
  paymentStatus: 'pending' | 'paid' | 'partially-paid' | 'refunded' | 'failed';
  /**
   * Payment method chosen by customer
   */
  paymentMethod?: ('cod' | 'bank-transfer' | 'online-payment' | 'card-payment') | null;
  whatsapp?: {
    /**
     * WhatsApp confirmation message sent to customer
     */
    messageSent?: boolean | null;
    /**
     * When the WhatsApp message was sent
     */
    messageTimestamp?: string | null;
    /**
     * WhatsApp message template used
     */
    messageTemplate?:
      | ('order-confirmation' | 'order-update' | 'shipping-notification' | 'delivery-confirmation')
      | null;
    /**
     * Customer response or feedback via WhatsApp
     */
    customerResponse?: string | null;
  };
  shipping?: {
    /**
     * Shipping tracking number
     */
    trackingNumber?: string | null;
    /**
     * Courier service used for delivery
     */
    courier?: ('pronto' | 'kapruka' | 'dhl' | 'fedex' | 'local' | 'pickup') | null;
    /**
     * Estimated delivery date
     */
    estimatedDelivery?: string | null;
    /**
     * Actual delivery date
     */
    actualDelivery?: string | null;
  };
  /**
   * Internal notes for team reference (not visible to customer)
   */
  internalNotes?: string | null;
  /**
   * How the customer placed this order
   */
  orderSource?: ('website' | 'whatsapp' | 'phone' | 'store' | 'social') | null;
  /**
   * User who created this order
   */
  createdBy?: (number | null) | User;
  /**
   * User who last modified this order
   */
  lastModifiedBy?: (number | null) | User;
  updatedAt: string;
  createdAt: string;
}
/**
 * Manage customer information and track order history with WhatsApp integration
 *
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "customers".
 */
export interface Customer {
  id: number;
  /**
   * Customer full name
   */
  name: string;
  /**
   * Customer email address
   */
  email: string;
  /**
   * Primary phone number for WhatsApp communication
   */
  primaryPhone: string;
  /**
   * Secondary phone number (optional)
   */
  secondaryPhone?: string | null;
  /**
   * Customer delivery addresses
   */
  addresses?:
    | {
        type: 'home' | 'office' | 'other';
        /**
         * Complete delivery address
         */
        address: string;
        /**
         * Set as default delivery address
         */
        isDefault?: boolean | null;
        id?: string | null;
      }[]
    | null;
  preferences?: {
    /**
     * Preferred communication method
     */
    communicationMethod?: ('whatsapp' | 'email' | 'phone') | null;
    /**
     * Preferred language for communication
     */
    language?: ('english' | 'sinhala' | 'tamil') | null;
    /**
     * Customer agrees to receive marketing communications
     */
    marketingOptIn?: boolean | null;
  };
  whatsapp?: {
    /**
     * WhatsApp number is verified and active
     */
    isVerified?: boolean | null;
    /**
     * Date of last WhatsApp message sent
     */
    lastMessageSent?: string | null;
    /**
     * Date of last customer response
     */
    lastResponse?: string | null;
    /**
     * Brief history of WhatsApp communications
     */
    messageHistory?: string | null;
  };
  orderStats?: {
    /**
     * Total number of orders placed
     */
    totalOrders?: number | null;
    /**
     * Number of pending/processing orders
     */
    pendingOrders?: number | null;
    /**
     * Number of completed orders
     */
    completedOrders?: number | null;
    /**
     * Number of cancelled orders
     */
    cancelledOrders?: number | null;
    /**
     * Total amount spent (LKR)
     */
    totalSpent?: number | null;
    /**
     * Average order value (LKR)
     */
    averageOrderValue?: number | null;
    /**
     * Date of last order
     */
    lastOrderDate?: string | null;
    /**
     * Date of first order
     */
    firstOrderDate?: string | null;
  };
  /**
   * Customer account status
   */
  status: 'active' | 'inactive' | 'vip' | 'blocked';
  /**
   * Customer type for special pricing or treatment
   */
  customerType?: ('regular' | 'vip' | 'wholesale' | 'corporate') | null;
  /**
   * Internal notes about this customer
   */
  notes?: string | null;
  /**
   * Customer tags (comma separated)
   */
  tags?: string | null;
  socialMedia?: {
    /**
     * Facebook profile URL
     */
    facebook?: string | null;
    /**
     * Instagram profile URL
     */
    instagram?: string | null;
  };
  /**
   * User who created this customer record
   */
  createdBy?: (number | null) | User;
  /**
   * User who last modified this customer record
   */
  lastModifiedBy?: (number | null) | User;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-locked-documents".
 */
export interface PayloadLockedDocument {
  id: number;
  document?:
    | ({
        relationTo: 'users';
        value: number | User;
      } | null)
    | ({
        relationTo: 'media';
        value: number | Media;
      } | null)
    | ({
        relationTo: 'categories';
        value: number | Category;
      } | null)
    | ({
        relationTo: 'brands';
        value: number | Brand;
      } | null)
    | ({
        relationTo: 'products';
        value: number | Product;
      } | null)
    | ({
        relationTo: 'orders';
        value: number | Order;
      } | null)
    | ({
        relationTo: 'customers';
        value: number | Customer;
      } | null);
  globalSlug?: string | null;
  user: {
    relationTo: 'users';
    value: number | User;
  };
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-preferences".
 */
export interface PayloadPreference {
  id: number;
  user: {
    relationTo: 'users';
    value: number | User;
  };
  key?: string | null;
  value?:
    | {
        [k: string]: unknown;
      }
    | unknown[]
    | string
    | number
    | boolean
    | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-migrations".
 */
export interface PayloadMigration {
  id: number;
  name?: string | null;
  batch?: number | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "users_select".
 */
export interface UsersSelect<T extends boolean = true> {
  firstName?: T;
  lastName?: T;
  phone?: T;
  profileImage?: T;
  role?: T;
  isActive?: T;
  lastLogin?: T;
  department?: T;
  notes?: T;
  updatedAt?: T;
  createdAt?: T;
  email?: T;
  resetPasswordToken?: T;
  resetPasswordExpiration?: T;
  salt?: T;
  hash?: T;
  loginAttempts?: T;
  lockUntil?: T;
  sessions?:
    | T
    | {
        id?: T;
        createdAt?: T;
        expiresAt?: T;
      };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "media_select".
 */
export interface MediaSelect<T extends boolean = true> {
  alt?: T;
  category?: T;
  caption?: T;
  tags?: T;
  isPublic?: T;
  isFeature?: T;
  seoTitle?: T;
  seoDescription?: T;
  usageNotes?: T;
  source?: T;
  copyright?: T;
  uploadedBy?: T;
  lastModifiedBy?: T;
  updatedAt?: T;
  createdAt?: T;
  url?: T;
  thumbnailURL?: T;
  filename?: T;
  mimeType?: T;
  filesize?: T;
  width?: T;
  height?: T;
  focalX?: T;
  focalY?: T;
  sizes?:
    | T
    | {
        thumbnail?:
          | T
          | {
              url?: T;
              width?: T;
              height?: T;
              mimeType?: T;
              filesize?: T;
              filename?: T;
            };
        card?:
          | T
          | {
              url?: T;
              width?: T;
              height?: T;
              mimeType?: T;
              filesize?: T;
              filename?: T;
            };
        tablet?:
          | T
          | {
              url?: T;
              width?: T;
              height?: T;
              mimeType?: T;
              filesize?: T;
              filename?: T;
            };
        desktop?:
          | T
          | {
              url?: T;
              width?: T;
              height?: T;
              mimeType?: T;
              filesize?: T;
              filename?: T;
            };
      };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "categories_select".
 */
export interface CategoriesSelect<T extends boolean = true> {
  name?: T;
  slug?: T;
  description?: T;
  image?: T;
  icon?: T;
  status?: T;
  displayOrder?: T;
  parentCategory?: T;
  isFeature?: T;
  showInNavigation?: T;
  seo?:
    | T
    | {
        title?: T;
        description?: T;
        keywords?: T;
      };
  config?:
    | T
    | {
        allowProducts?: T;
        requiresSize?: T;
        requiresColor?: T;
        customFields?: T;
      };
  productCount?: T;
  createdBy?: T;
  lastModifiedBy?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "brands_select".
 */
export interface BrandsSelect<T extends boolean = true> {
  name?: T;
  slug?: T;
  description?: T;
  logo?: T;
  website?: T;
  countryOfOrigin?: T;
  foundedYear?: T;
  status?: T;
  isFeatured?: T;
  isPremium?: T;
  contact?:
    | T
    | {
        email?: T;
        phone?: T;
        address?: T;
      };
  social?:
    | T
    | {
        facebook?: T;
        instagram?: T;
        twitter?: T;
        youtube?: T;
      };
  seo?:
    | T
    | {
        title?: T;
        description?: T;
        keywords?: T;
      };
  specialties?: T;
  priceRange?: T;
  targetAudience?: T;
  productCount?: T;
  createdBy?: T;
  lastModifiedBy?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "products_select".
 */
export interface ProductsSelect<T extends boolean = true> {
  name?: T;
  slug?: T;
  category?: T;
  brand?: T;
  price?: T;
  sku?: T;
  stock?: T;
  images?:
    | T
    | {
        image?: T;
        altText?: T;
        id?: T;
      };
  status?: T;
  sizes?: T;
  colors?: T;
  description?: T;
  seo?:
    | T
    | {
        title?: T;
        description?: T;
      };
  specifications?:
    | T
    | {
        material?: T;
        weight?: T;
        dimensions?: T;
        careInstructions?: T;
      };
  shipping?:
    | T
    | {
        freeShipping?: T;
        islandWideDelivery?: T;
        easyReturn?: T;
        shippingWeight?: T;
      };
  pricing?:
    | T
    | {
        originalPrice?: T;
        costPrice?: T;
        lowStockThreshold?: T;
        trackInventory?: T;
      };
  features?:
    | T
    | {
        feature?: T;
        id?: T;
      };
  tags?: T;
  relatedProducts?: T;
  analytics?:
    | T
    | {
        viewCount?: T;
        orderCount?: T;
        rating?: T;
        reviewCount?: T;
      };
  createdBy?: T;
  lastModifiedBy?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "orders_select".
 */
export interface OrdersSelect<T extends boolean = true> {
  orderNumber?: T;
  customerName?: T;
  customerEmail?: T;
  customerPhone?: T;
  customerSecondaryPhone?: T;
  deliveryAddress?: T;
  specialInstructions?: T;
  orderItems?:
    | T
    | {
        productId?: T;
        productName?: T;
        productSku?: T;
        unitPrice?: T;
        quantity?: T;
        selectedSize?: T;
        selectedColor?: T;
        subtotal?: T;
        id?: T;
      };
  orderSubtotal?: T;
  shippingCost?: T;
  discount?: T;
  orderTotal?: T;
  orderStatus?: T;
  paymentStatus?: T;
  paymentMethod?: T;
  whatsapp?:
    | T
    | {
        messageSent?: T;
        messageTimestamp?: T;
        messageTemplate?: T;
        customerResponse?: T;
      };
  shipping?:
    | T
    | {
        trackingNumber?: T;
        courier?: T;
        estimatedDelivery?: T;
        actualDelivery?: T;
      };
  internalNotes?: T;
  orderSource?: T;
  createdBy?: T;
  lastModifiedBy?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "customers_select".
 */
export interface CustomersSelect<T extends boolean = true> {
  name?: T;
  email?: T;
  primaryPhone?: T;
  secondaryPhone?: T;
  addresses?:
    | T
    | {
        type?: T;
        address?: T;
        isDefault?: T;
        id?: T;
      };
  preferences?:
    | T
    | {
        communicationMethod?: T;
        language?: T;
        marketingOptIn?: T;
      };
  whatsapp?:
    | T
    | {
        isVerified?: T;
        lastMessageSent?: T;
        lastResponse?: T;
        messageHistory?: T;
      };
  orderStats?:
    | T
    | {
        totalOrders?: T;
        pendingOrders?: T;
        completedOrders?: T;
        cancelledOrders?: T;
        totalSpent?: T;
        averageOrderValue?: T;
        lastOrderDate?: T;
        firstOrderDate?: T;
      };
  status?: T;
  customerType?: T;
  notes?: T;
  tags?: T;
  socialMedia?:
    | T
    | {
        facebook?: T;
        instagram?: T;
      };
  createdBy?: T;
  lastModifiedBy?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-locked-documents_select".
 */
export interface PayloadLockedDocumentsSelect<T extends boolean = true> {
  document?: T;
  globalSlug?: T;
  user?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-preferences_select".
 */
export interface PayloadPreferencesSelect<T extends boolean = true> {
  user?: T;
  key?: T;
  value?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-migrations_select".
 */
export interface PayloadMigrationsSelect<T extends boolean = true> {
  name?: T;
  batch?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "auth".
 */
export interface Auth {
  [k: string]: unknown;
}


declare module 'payload' {
  export interface GeneratedTypes extends Config {}
}